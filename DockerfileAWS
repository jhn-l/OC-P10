# ğŸ”¹ Ã‰tape 1 : Base AWS Lambda
FROM public.ecr.aws/lambda/python:3.8 as base

# ğŸ”¹ Ã‰tape 2 : EntraÃ®nement du modÃ¨le
FROM base AS train
WORKDIR /var/task

RUN yum install -y gcc gcc-c++ make libstdc++-devel

# Installer les dÃ©pendances pour l'entraÃ®nement
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# DÃ©finir le chemin du modÃ¨le pour Ãªtre cohÃ©rent avec `train.py`
ENV MODEL_PATH=/tmp/recommender_model_hybrid.pkl

# Copier le script d'entraÃ®nement et lâ€™exÃ©cuter
COPY train.py .
RUN python3 train.py

# ğŸ”¹ Ã‰tape 3 : Construction de lâ€™image finale pour AWS Lambda
FROM base
WORKDIR /var/task

# âœ… **Installer Ã  nouveau `gcc` avant `pip install`**
RUN yum install -y gcc gcc-c++ make libstdc++-devel

# Installer `scikit-learn`, `surprise` et `boto3` pour lâ€™infÃ©rence
RUN pip install --no-cache-dir scikit-learn sickit-surprise boto3

# Copier le modÃ¨le entraÃ®nÃ© depuis lâ€™Ã©tape `train`
COPY --from=train /tmp/recommender_model_hybrid.pkl /var/task/recommender_model_hybrid.pkl

# Copier le fichier de recommandation (Lambda handler)
COPY hybrid_recommender.py .

# ğŸ”¹ DÃ©finition du point dâ€™entrÃ©e de la Lambda
CMD ["hybrid_recommender.lambda_handler"]
