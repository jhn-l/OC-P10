name: Setup AWS Infrastructure & Upload Data

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  setup-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Installer AWS SDK et dÃ©pendances
        run: |
          python -m pip install --upgrade pip
          pip install boto3 requests

      - name: ExÃ©cuter le script d'initialisation (crÃ©ation DynamoDB + Upload S3)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_LAMBDA_ROLE_ARN: ${{ secrets.AWS_LAMBDA_ROLE_ARN }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: python download_and_upload_s3.py
      
      - name: ðŸ“¦ Construire l'image Docker pour Lambda
        run: |
          docker build -t hybrid-recommender -f DockerfileAWS .

      - name: ðŸš€ DÃ©ployer la Lambda Hybrid Recommender avec Docker
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_LAMBDA_ROLE_ARN: ${{ secrets.AWS_LAMBDA_ROLE_ARN }}
        run: |
          docker tag hybrid-recommender:latest public.ecr.aws/${{ secrets.AWS_ACCOUNT_ID }}/hybrid-recommender:latest
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin public.ecr.aws/${{ secrets.AWS_ACCOUNT_ID }}
          docker push public.ecr.aws/${{ secrets.AWS_ACCOUNT_ID }}/hybrid-recommender:latest
          aws lambda create-function \
            --function-name HybridRecommenderLambda \
            --package-type Image \
            --code ImageUri=public.ecr.aws/${{ secrets.AWS_ACCOUNT_ID }}/hybrid-recommender:latest \
            --role $AWS_LAMBDA_ROLE_ARN || \
          aws lambda update-function-code \
            --function-name HybridRecommenderLambda \
            --image-uri public.ecr.aws/${{ secrets.AWS_ACCOUNT_ID }}/hybrid-recommender:latest

      - name: DÃ©ployer API Gateway
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws apigatewayv2 create-api \
            --name "RecommenderAPI" \
            --protocol-type HTTP \
            --target arn:aws:lambda:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:GetUserRecommendations
